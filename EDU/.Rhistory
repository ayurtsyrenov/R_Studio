ayur<-read.table(file=file.choose(), header=TRUE, sep=";")
data<-read.table(file=file.choose(), header= TRUE, sep=",")
summary(data)
View(data)
data<-read.table(file=file.choose(), header= TRUE)
data<-read.table(file=file.choose(), header= TRUE)
summary(data)
View(data)
data<-read.table(file=file.choose(), header= TRUE, sep=";")
View(data)
summary(data)
ts.data<-ts(data$X, start=c(2018,1,1), frequency = 365)
tsdisplay(ts.data)
plot(ts.data)
data<-read.table(file=file.choose(), header= TRUE, sep=";")
summary(data)
library(forecast)
install.packages("forecast")
library(forecast)
library(forecast)
install.packages("tseries")
install.packages("forecast")
library(forecast)
plot(ts.data)
install.packages("forecast")
library(forecast)
tsdisplay(ts.data)
data<-read.table(file=file.choose(), header= TRUE, sep=";")
summary(data)
ts.data<-ts(data$curs, start=c(2000,1,1), frequency = 12)
ts.data<-ts(data$curs, start=c(2000,1,1), frequency = 12)
tsdisplay(ts.data)
library(forecast)
install.packages("forecast")
library(forecast)
install.packages("ggplot2")
library(ggplot)
data<-read.table(file=file.choose(), header= TRUE, sep=";")
summary(data)
reg<-lm(cost~Click, data=data)
install.packages(c("dplyr", "ggplot2", "GGally", "psych"))
library("dplyr")
library("ggplot2")
library("GGally")
library("psych")
d <- cars
glimpse(d)
help(cats)
help(cars)
head(d)
tail(d)
describe(d)
ncol(d)
nrow(d)
strd
str(d)
mean(d$speed)
d2 <- mutate(d, speed=1.67*speed,
dist=0.3*dist, ratio=dist/speed)
glimpse(d2)
# visualization
qplot(data=d2, dist)
# visualization
qplot(data=d2, dist, xlab="Длина тормозного пути", ylab = "Количество машин", main = "Данные 1920х годов")
qplot(data=d2, speed, dist)
# если много переменных, то через +
model <- lm(data=d2, dist~speed)
model
beta_hat <- coef(model)
beta_hat
beta_hat <- coef(model)
beta_hat
eps <- residuals(models)
eps <- residuals(model)
eps
y <- d2$dist
y_hat<-fitted(model)
RSS <-deviance(model)
RSS
TSS <- sum((y-mean(y))^2)
TSS
ESS <- TSS - RSS
ESS
R2 <- ESS/TSS
R2
cor(y,y_hat)
cor(y,y_hat)^2
X <- model.matrix(model)
X
nd <- data.frame(speed=c(40,60))
nd
predict(model, nd)
qplot(data=d2, speed, dist) + stat_smooth(method="lm")
# another data
t <- swiss
summary(t)
glimpse(t)
describe(t)
ggpairs(t)
model2 <- lm(data=t, Fertility~Agriculture
+ Education+Catholic)
model2
#eps
residuals(model2)
#y^
fitted(model2)
#RSS
deviance(model2)
report <- summary(model2)
report
report$r.squared
cor(t$Fertility, fitted(model2))
cor(t$Fertility, fitted(model2))^2
nd2 <- data.frame(Agriculture=0.5, Catholic=0.5, Education=20)
predict(model2,nd2)
library("dplyr") # обработка данных
library("ggplot2") #визуализация
library("GGally") #матрица диаграм рассеивания
library("psych") #описательные статистики
d <- cars
glimpse(d)
help(cars)
head(d)
tail(d)
describe(d)
ncol(d)
nrow(d)
str(d)
mean(d$speed)
# change value
d2 <- mutate(d, speed=1.67*speed,
dist=0.3*dist, ratio=dist/speed)
# change value
d2 <- mutate(d, speed=1.67*speed,
dist=0.3*dist, ratio=dist/speed)
glimpse(d2)
# visualization
qplot(data=d2, dist, xlab="Длина тормозного пути", ylab = "Количество машин", main = "Данные 1920х годов")
qplot(data=d2, speed, dist)
# если много переменных, то через +
model <- lm(data=d2, dist~speed)
model
beta_hat <- coef(model)
beta_hat
eps <- residuals(model)
eps
y <- d2$dist
y_hat<-fitted(model)
RSS <-deviance(model)
RSS
TSS <- sum((y-mean(y))^2)
TSS
ESS <- TSS - RSS
ESS
R2 <- ESS/TSS
R2
cor(y,y_hat)^2
X <- model.matrix(model)
X
rm(list = ls())
getwd()
setwd("~/Data analytics/R/R_Studio/clustering")
bev <- read.table(file = "beverage_r.csv", header = TRUE, sep = ";")
# создаем матрицу попарных расстояний
dist.bev <- dist(bev[,2:9])
# clustering by WARD method (иерархический кластерный анализ)
clust_bev <- hclust(dist.bev, "ward.D")
clust_bev
plot(clust_bev)
plot(clust_bev, hang = -1, main = "Clustering",
sub = "Subtitle", xlab = "x", ylab = "y")
# add color
rect.hclust(clust_bev, k=3, border = "red")
group <- cutree(clust_bev, k = 3)
group
# вычислим долю пьющих каждый напиток
colMeans(bev[group == 1, 2:9])*100
colMeans(bev[group == 2, 2:9])*100
colMeans(bev[group == 3, 2:9])*100
names(clust_bev)
names(clust_bev)
clust_bev$merge
# строим график "локоть"
plot(1:33, clust_bev$height, main = "График 'локоть'",
type = "l")
prot <- read.table(file = "protein.csv", header = TRUE, sep = ";", dec = ",")
prot_2 <- scale(prot[,2:10], center=TRUE, scale=TRUE)
dist_prot_2 <- dist(prot_2[,1:9])
clust_prot_2 <- hclust(dist_prot_2, "ward.D")
clust_prot_2
plot(clust_prot_2, labels = prot[,1], hang = -1)
rect.hclust(clust_prot_2, k=4, border = "green")
setwd("~/Data analytics/R/R_Studio/EDU")
(g<-8)
x = 2/0
x
(x.1<-log(0))
x.2 = 0/0
x.2
y = seq(2,30, by=3)
y
y = seq(2,30, by=3)
y
z = seq(10,30, out = 10
z = seq(10,30, out = 10)
z = seq(10,30, out = 10)
z = seq(10,30, lenghtout = 10)
z = seq(10,30, lenght.out = 10)
z = seq(10,30, length.out = 10)
z
z
z.4 = rep(c(5,4,3), c(2,4,3))
z.4
vec = c(2,4,NA,5,6)
vec
max(vec, na.rm = TRUE)
mean(vec, na.rm = TRUE)
x = 1
x[3]=3
x
a <- c(1,3,5,7,9)
b <-c(2,3,5,7,11,13)
a+b
w <- c(1,8,2,6,3,8,5,5,5,5)
sum(w)
log10(w)
log(exp(w))
z = (w - 5.4)/3.875
z
round(z)
y = max(w) - min(w)
y
w2 = w!=5
w2
w2 = [w!=5]
w[w!=5]
w[w!=5]
View(iris)
summary(iris)
hist(iris$Sepal.Length)
hist(iris$Sepal.Length, main = "Гистограмма распределения длинны
лепесточка", xlab = "Длина", ylab = "ширина")
hist(iris$Sepal.Length, main = "Гистограмма распределения длинны
лепесточка", xlab = "Длина", ylab = "ширина", nclass = 10)
hist(iris$Sepal.Length, main = "Гистограмма распределения длинны
лепесточка", xlab = "Длина", ylab = "ширина", nclass = 10)
hist(iris$Sepal.Length, main = "Гистограмма распределения длинны
лепесточка", xlab = "Длина", ylab = "ширина", nclass = 10,
freq = F)
hist(iris$Sepal.Length, main = "Гистограмма распределения длинны
лепесточка", xlab = "Длина", ylab = "ширина", nclass = 10,
freq = F, labels = T)
plot(iris$Species)
plot(sample(iris$Species, 70, F))
set.seed(2020)
plot(sample(iris$Species, 70, F))
plot(sample(iris$Species, 70, F))
group = c(18,30,32,10,10)
lab = c("A", "B", "C", "D", "F")
pie(group, lab)
pie(group, lab, col = c("grey", "grey20", "grey40", "grey60"))
pie(group, lab, col = c("grey", "grey20", "grey40", "grey60", "grey80"))
pie(table(iris$Species))
plot(iris$Sepal.Length, iris$Sepal.Width, type ="l")
plot(sin(x), xlim = 10, ylim = 1, main = "y=sin(x)"
xlab = "x", ylab="y")
y = sin(x)
plot(y, xlim = 10, ylim = 1, main = "y=sin(x)"
xlab = "x", ylab="y")
plot(y, xlim = c(10), ylim = (1.0), main = "y=sin(x)"
xlab = "x", ylab="y")
y = sin(4)
plot(y, xlim = c(10), ylim = (1.0), main = "y=sin(x)"
xlab = "x", ylab="y")
plot(y, xlim = 10, ylim = 1.0, main = "y=sin(x)"
xlab = "x", ylab="y")
plot(y, xlim = c(1,10), ylim = c(-1,1), main = "y=sin(x)"
xlab = "x", ylab="y")
y = sin(4)
plot(y, xlim = c(1,10), ylim = c(-1,1), main = "y=sin(x)"
xlab = "x", ylab="y")
plot(y, xlim = c(1,10), ylim = c(-1,1), main = "y=sin(x)",
xlab = "x", ylab="y")
x = c(1:20)
y = sin(x)
plot(y, xlim = c(1,10), ylim = c(-1,1), main = "y=sin(x)",
xlab = "x", ylab="y")
plot(y, xlim = c(1,10), ylim = c(-1,1), main = "y=sin(x)",
xlab = "x", ylab="y", tipe="l")
plot(x, y, xlim = c(1,10), ylim = c(-1,1), main = "y=sin(x)",
xlab = "x", ylab="y", tipe="l")
x = seq(0:10, 0.01)
x = seq(0,10, 0.01)
y = sin(x)
plot(x, y, xlim = c(1,10), ylim = c(-1,1), main = "y=sin(x)",
xlab = "x", ylab="y", tipe="l")
plot(x, y, main = "y=sin(x)",
xlab = "x", ylab="y", tipe="l", col = "red")
plot(x, y, main = "y=sin(x)",
xlab = "x", ylab="y", col = "red")
plot(iris$Petal.Length, iris$Petal.Width)
points(iris$Sepal.Length, iris$Sepal.Width, col="blue")
plot(iris)
plot(iris[,1:4])
install.packages("ggplot2")
library(ggplot2)
# сравнение данных нескольких категорий
x = iris$Species
y = iris$Sepal.Length
qplot(x, y, geom="point")
qplot(x, y, geom="point", main="Iris data")
qplot(x=Species, y=Sepal.Length, data=iris, geom="point",
main="????? ??????", xlab="????? ????????", ylab="?????")
qplot(x=Species, y=Sepal.Length, data=iris,geom="boxplot",
col=Species, main="????? ??????",
xlab="????? ????????", ylab="?????")
qplot(x=Species, y=Sepal.Length, data=iris,geom="boxplot",
col=Species, main="????? ??????",
xlab="????? ????????", ylab="?????")
qplot(x=Species, y=Sepal.Length, data=iris, geom=c("boxplot", "jitter"),
fill=Species, main="????? ? ????? ? ???????? ??????",
xlab="????? ????????", ylab="?????")
qplot(x=Species, y=Sepal.Length, data=iris, geom="violin",
fill=Species, main="????????? ????????????? ???? ????????",
xlab="????? ????????", ylab="?????")
# ????????? ????????????? ???? ????????? ??? ?????? ???????
qplot(x=Sepal.Length, data=iris, geom="density",
fill=Species, xlab="????? ????????")
qplot(x=Sepal.Length, data=iris, geom="density",
fill=Species, alpha=I(0.5))
qplot(x=Sepal.Length, data=iris, geom="density",facets=Species~.,
fill=Species, xlab="????? ????????")
################################
#??????????
install.packages("corrplot")
library(corrplot)
a=cor(iris[,-5], use = "complete.obs", method = "pearson")
corrplot(a,method="color")
corrplot(a, method="color", addgrid.col = "gray33")
corrplot(a, method="color", addCoef.col="red", addgrid.col = "gray50", tl.col = "black")
corrplot(a, method="pie", type="lower")
# плотность распределения
qplot(x=Sepal.Length, data=iris, geom="density",
main="????????? ?????????????",
xlab="????? ????????")
qplot(x=Sepal.Length, data=iris, geom="density",fill=I("pink"),
main="????????? ?????????????",
xlab="????? ????????")
# ????????? ????????????? ???? ????????? ??? ?????? ???????
qplot(x=Sepal.Length, data=iris, geom="density",
fill=Species, xlab="????? ????????")
# ????????? ????????????? ???? ????????? ??? ?????? ???????
qplot(x=Sepal.Length, data=iris, geom="density",
fill=Species, xlab="????? ????????")
qplot(x=Sepal.Length, data=iris, geom="density",
fill=Species, alpha=I(0.5))
a=cor(iris[,-5], use = "complete.obs", method = "pearson")
corrplot(a,method="color")
################################
#?????? ?????????
qplot(x=Sepal.Width, y=Sepal.Length, data=iris, geom="point",
col=Species)
qplot(x=Sepal.Width, y=Sepal.Length, data=iris, geom="point",
shape=Species)
####################################
#??????????? ?????????
qplot(x=Sepal.Width, y=Sepal.Length, data=iris, geom="point",
size=Petal.Length)
qplot(x=Sepal.Width, y=Sepal.Length, data=iris, geom="point",
col=Petal.Length)
qplot(x=Sepal.Width, y=Sepal.Length, data=iris, geom="point",
col=Species, facets=Species~.)
######################################
# ????????? ? ????????????? ????????????
# ????????????? ??? ????????? ???????? ?????????? ?????????? ? ??????? ?? ????????????.
library(MASS)
parcoord(iris[,1:4])
colors.1=colors()[as.numeric(iris$Species)]
parcoord(iris[,c(1:4)] , col= colors.1)
colors.1=colors()[as.numeric(iris$Species)*35]
parcoord(iris[,c(1:4)] , col= colors.1,var.label =T)
# ????????????? ?????????? ??????
install.packages("factoextra")
install.packages("wordcloud2")
library(wordcloud2)
wordcloud2(data=Pr)
wordcloud2(data=Pr, size=0.8)
wordcloud2(data=Pr, size=0.8,shape = "star")
